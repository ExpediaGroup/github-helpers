{"version":3,"file":"257.index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;;;;;;;;;;;AAWA;;;;;;;;;;AAGA;AACA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;;;;;AC/BA;;;;;;;;;;;AAWA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAQA;AAEA;AAMA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AAMA;AAKA;AACA;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpHA;;;;;;;;;;;AAWA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;AClBA;;;;;;;;;;;AAWA;AAEA;AA2CA","sources":["webpack://github-helpers/./src/constants.ts","webpack://github-helpers/./src/utils/paginate-open-issues.ts","webpack://github-helpers/./src/helpers/add-overdue-issue-label.ts","webpack://github-helpers/./src/octokit.ts","webpack://github-helpers/./src/types/generated.ts"],"sourcesContent":["/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// These extra headers are for experimental API features on Github Enterprise. See https://docs.github.com/en/enterprise-server@3.0/rest/overview/api-previews for details.\nconst PREVIEWS = ['ant-man', 'flash', 'groot', 'inertia', 'starfox'];\nexport const GITHUB_OPTIONS = {\n  headers: {\n    accept: PREVIEWS.map(preview => `application/vnd.github.${preview}-preview+json`).join()\n  }\n};\n\nexport const DEFAULT_EXEMPT_DESCRIPTION = 'Passed in case the check is exempt.';\nexport const DEFAULT_PIPELINE_STATUS = 'Pipeline Status';\nexport const DEFAULT_PIPELINE_DESCRIPTION = 'Pipeline clear.';\nexport const PRODUCTION_ENVIRONMENT = 'production';\nexport const LATE_REVIEW = 'Late Review';\nexport const OVERDUE_ISSUE = 'Overdue';\nexport const ALMOST_OVERDUE_ISSUE = 'Due Soon';\nexport const PRIORITY_1 = 'Priority: Critical';\nexport const PRIORITY_2 = 'Priority: High';\nexport const PRIORITY_3 = 'Priority: Medium';\nexport const PRIORITY_4 = 'Priority: Low';\nexport const CORE_APPROVED_PR_LABEL = 'CORE APPROVED';\nexport const PEER_APPROVED_PR_LABEL = 'PEER APPROVED';\nexport const READY_FOR_MERGE_PR_LABEL = 'READY FOR MERGE';\nexport const MERGE_QUEUE_STATUS = 'QUEUE CHECKER';\nexport const QUEUED_FOR_MERGE_PREFIX = 'QUEUED FOR MERGE';\nexport const FIRST_QUEUED_PR_LABEL = `${QUEUED_FOR_MERGE_PREFIX} #1`;\nexport const JUMP_THE_QUEUE_PR_LABEL = 'JUMP THE QUEUE';\nexport const DEFAULT_PR_TITLE_REGEX = '^(build|ci|chore|docs|feat|fix|perf|refactor|style|test|revert|Revert|BREAKING CHANGE)((.*))?: .+$';\nexport const COPYRIGHT_HEADER = `/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/`;\n","/*\nCopyright 2023 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { IssueList } from '../types/github';\nimport { octokit } from '../octokit';\nimport { context } from '@actions/github';\n\nexport const paginateAllOpenIssues = async (priorityLabels?: string, page = 1): Promise<IssueList> => {\n  const response = await octokit.issues.listForRepo({\n    state: 'open',\n    labels: priorityLabels,\n    sort: 'created',\n    direction: 'desc',\n    per_page: 100,\n    page,\n    ...context.repo\n  });\n  if (!response.data.length) {\n    return [];\n  }\n  return (response.data as IssueList).concat(await paginateAllOpenIssues(priorityLabels, page + 1));\n};\n","/*\nCopyright 2023 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { OVERDUE_ISSUE, ALMOST_OVERDUE_ISSUE, PRIORITY_1, PRIORITY_2, PRIORITY_3, PRIORITY_4 } from '../constants';\nimport { HelperInputs } from '../types/generated';\nimport { context } from '@actions/github';\nimport { octokit } from '../octokit';\nimport { paginateAllOpenIssues } from '../../src/utils/paginate-open-issues';\nimport { IssueLabels, IssueList } from '../types/github';\nimport { map } from 'bluebird';\n\nexport class AddOverdueIssueLabel extends HelperInputs {\n  /* The threshold (in days) of when to apply the \"due soon\" label\n   * @default 7\n   */\n  warningThreshold?: number;\n  almostOverdueLabel?: string;\n  overdueLabel?: string;\n  priorityLabels?: PriorityLabelType;\n}\n\nexport const addOverdueIssueLabel = async ({\n  warningThreshold = 7,\n  almostOverdueLabel = ALMOST_OVERDUE_ISSUE,\n  overdueLabel = OVERDUE_ISSUE,\n  priorityLabels = { priority_1: PRIORITY_1, priority_2: PRIORITY_2, priority_3: PRIORITY_3, priority_4: PRIORITY_4 }\n}: AddOverdueIssueLabel) => {\n  const openIssues: IssueList = await paginateAllOpenIssues(\n    [priorityLabels.priority_1, priorityLabels.priority_2, priorityLabels.priority_3, priorityLabels.priority_4].join()\n  );\n\n  return map(openIssues, issue => {\n    const { labels: issueLabels, created_at, assignee, number: issue_number } = issue;\n    const priority = issueLabels && getPriorityLabel(issueLabels as IssueLabels, priorityLabels);\n    if (!priority) return;\n\n    const labelToAdd = isOverdue(priority, new Date(created_at), warningThreshold, overdueLabel, almostOverdueLabel, priorityLabels);\n\n    if (!labelToAdd) return;\n\n    octokit.issues.createComment({\n      issue_number,\n      body: `@${assignee}, this issue assigned to you is now ${labelToAdd.toLowerCase()}`,\n      ...context.repo\n    });\n\n    return octokit.issues.addLabels({\n      labels: [labelToAdd],\n      issue_number,\n      ...context.repo\n    });\n  });\n};\n\ntype PriorityLabelType = {\n  priority_1: string;\n  priority_2: string;\n  priority_3: string;\n  priority_4: string;\n};\n\nconst getPriorityLabel = (labels: IssueLabels, priorityLabels: PriorityLabelType) => {\n  if (labels.find(label => (label.name || label) === priorityLabels.priority_1)) return priorityLabels.priority_1;\n  else if (labels.find(label => (label.name || label) === priorityLabels.priority_2)) return priorityLabels.priority_2;\n  else if (labels.find(label => (label.name || label) === priorityLabels.priority_3)) return priorityLabels.priority_3;\n  else if (labels.find(label => (label.name || label) === priorityLabels.priority_4)) return priorityLabels.priority_4;\n  else return;\n};\n\nconst SLAGuidelines = {\n  critical: 2,\n  high: 14,\n  medium: 45,\n  low: 90\n};\n\nconst isOverdue = (\n  priority: string,\n  date_created: Date,\n  warningThreshold: number,\n  overdueLabel: string,\n  almostOverdueLabel: string,\n  priorityLabels: PriorityLabelType\n) => {\n  if (!priority.length) return;\n\n  const now = new Date();\n  const daysSinceCreation = (now.getTime() - date_created.getTime()) / 86400000;\n\n  switch (priority) {\n    case priorityLabels.priority_1:\n      if (daysSinceCreation > SLAGuidelines.critical) return overdueLabel;\n      break;\n    case priorityLabels.priority_2:\n      if (daysSinceCreation > SLAGuidelines.high) return overdueLabel;\n      else if (daysSinceCreation > SLAGuidelines.high - warningThreshold) return almostOverdueLabel;\n      break;\n    case priorityLabels.priority_3:\n      if (daysSinceCreation > SLAGuidelines.medium) return overdueLabel;\n      else if (daysSinceCreation > SLAGuidelines.medium - warningThreshold) return almostOverdueLabel;\n      break;\n    case priorityLabels.priority_4:\n      if (daysSinceCreation > SLAGuidelines.low) return overdueLabel;\n      else if (daysSinceCreation > SLAGuidelines.low - warningThreshold) return almostOverdueLabel;\n      break;\n  }\n};\n","/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as core from '@actions/core';\nimport * as fetch from '@adobe/node-fetch-retry';\nimport { getOctokit } from '@actions/github';\n\nconst githubToken = core.getInput('github_token', { required: true });\nexport const { rest: octokit, graphql: octokitGraphql } = getOctokit(githubToken, { request: { fetch } });\n","/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nexport class HelperInputs {\n  helper?: string;\n  github_token?: string;\n  body?: string;\n  project_name?: string;\n  project_destination_column_name?: string;\n  note?: string;\n  project_origin_column_name?: string;\n  sha?: string;\n  context?: string;\n  state?: string;\n  description?: string;\n  target_url?: string;\n  environment?: string;\n  environment_url?: string;\n  label?: string;\n  labels?: string;\n  paths?: string;\n  ignore_globs?: string;\n  extensions?: string;\n  override_filter_paths?: string;\n  batches?: string;\n  pattern?: string;\n  teams?: string;\n  login?: string;\n  paths_no_filter?: string;\n  slack_webhook_url?: string;\n  number_of_assignees?: string;\n  number_of_reviewers?: string;\n  globs?: string;\n  override_filter_globs?: string;\n  title?: string;\n  seconds?: string;\n  pull_number?: string;\n  base?: string;\n  head?: string;\n  days?: string;\n  no_evict_upon_conflict?: string;\n  skip_if_already_set?: string;\n  delimiter?: string;\n  team?: string;\n  ignore_deleted?: string;\n  return_full_payload?: string;\n}\n"],"names":[],"sourceRoot":""}