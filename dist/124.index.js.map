{"version":3,"file":"124.index.js","sources":["webpack://github-helpers/./src/helpers/create-project-card.ts","webpack://github-helpers/./src/octokit.ts"],"sourcesContent":["/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as core from '@actions/core';\nimport { ColumnListResponse, ProjectListResponse, PullRequest, PullRequestGetResponse } from '../types';\nimport { context } from '@actions/github';\nimport { octokit } from '../octokit';\n\ninterface CreateProjectCardProps {\n  teams?: string;\n  pull_number: number;\n  login?: string;\n  project_name: string;\n  project_destination_column_name: string;\n  note?: string;\n}\n\nexport const createProjectCard = async ({ pull_number, project_name, project_destination_column_name, note }: CreateProjectCardProps) => {\n  return octokit.pulls\n    .get({\n      pull_number,\n      ...context.repo\n    })\n    .then((getResponse: PullRequestGetResponse) => {\n      const pullRequest = getResponse.data as PullRequest;\n      if (pullRequest) {\n        octokit.projects\n          .listForRepo({\n            state: 'open',\n            per_page: 100,\n            ...context.repo\n          })\n          .then(projects => {\n            const project = findProjectToModify(projects, project_name);\n            if (project) {\n              octokit.projects\n                .listColumns({\n                  project_id: project.id,\n                  per_page: 100\n                })\n                .then(response => {\n                  const filteredColumn = filterDestinationColumn(response, project_destination_column_name);\n                  if (filteredColumn) {\n                    if (note) {\n                      octokit.projects.createCard({\n                        column_id: filteredColumn.id,\n                        note,\n                        ...context.repo\n                      });\n                    } else {\n                      octokit.projects\n                        .createCard({\n                          column_id: filteredColumn.id,\n                          content_id: pullRequest.id,\n                          content_type: 'PullRequest',\n                          note,\n                          ...context.repo\n                        })\n                        .then(response => {\n                          // move the card to the coulmn's bottom after created\n                          octokit.projects.moveCard({\n                            card_id: response.data.id,\n                            position: 'bottom',\n                            column_id: filteredColumn.id\n                          });\n                        });\n                    }\n                  }\n                });\n            }\n          });\n      }\n    })\n    .catch(error => {\n      if (error.status === 409) {\n        core.info('There was an error creating the project card.');\n      }\n    });\n};\n\nconst findProjectToModify = (projectsResponse: ProjectListResponse, projectName: string) =>\n  projectsResponse.data.find(project => project.name === projectName);\n\nconst filterDestinationColumn = (columns: ColumnListResponse, destinationColumn: string) =>\n  columns.data.find(column => column.name === destinationColumn);\n","/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as core from '@actions/core';\nimport { Octokit } from '@octokit/rest';\nimport { getOctokit } from '@actions/github';\n\nexport const octokit = getOctokit(core.getInput('github_token', { required: true })).rest as unknown as Octokit;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAWA;;;;;;;;;;AAEA;AAEA;AACA;AAWA;AACA,qFACA;AAIA;AACA;AACA;AACA,4GACA;AAKA;AACA;AACA;AACA,oHACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA,8HACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;;A;;;;;;;;;;;;;AC7FA;;;;;;;;;;;AAWA;AAEA;AAEA;AAEA;;;A;;;A","sourceRoot":""}