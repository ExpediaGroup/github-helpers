{"version":3,"file":"75.index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnGA;;;;;;;;;;;AAWA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAOA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3EA;;;;;;;;;;;AAWA;AAEA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;ACnBA;;;;;;;;;;;AAWA;AAEA;AAmCA","sources":["webpack://github-helpers/./src/utils/get-changed-files.ts","webpack://github-helpers/./src/helpers/generate-component-matrix.ts","webpack://github-helpers/./src/octokit.ts","webpack://github-helpers/./src/types/generated.ts"],"sourcesContent":["import * as github from '@actions/github';\nimport * as core from '@actions/core';\nimport { octokit } from '../octokit';\n\nexport enum ChangeType {\n  add,\n  edit,\n  delete,\n  any\n}\n\nexport interface Change {\n  file: string;\n  changeType: ChangeType;\n  patch: string;\n}\n\nexport async function getChangedFiles(eventName: string | undefined): Promise<Change[]> {\n  if (!eventName) {\n    return [];\n  }\n\n  switch (eventName) {\n    case 'push':\n      return getChangesFromSha();\n    default:\n      return getChangesFromPR();\n  }\n}\n\nasync function getChangesFromSha(): Promise<Change[]> {\n  const beforeSha = github.context.payload.before;\n  const afterSha = github.context.payload.after;\n  const owner = github.context.payload.repository?.owner?.name;\n  const repo = github.context.payload.repository?.name;\n\n  if (!beforeSha || !afterSha || !repo || !owner) {\n    return [];\n  }\n\n  const changedFiles = await octokit.repos.compareCommits({\n    owner,\n    repo,\n    base: beforeSha,\n    head: afterSha,\n    mediaType: { format: 'sha' }\n  });\n\n  const changes: Change[] = changedFiles.data.files!.map(f => ({\n    file: f.filename,\n    changeType: parseStatus(f.status),\n    patch: f.patch!\n  }));\n\n  core.debug('found changed files:');\n  for (const change of changes) {\n    core.debug(`  ${change.file}`);\n  }\n\n  return changes;\n}\n\nasync function getChangesFromPR(): Promise<Change[]> {\n  const pullRequest = github.context.payload.pull_request;\n  if (!pullRequest) {\n    return [];\n  }\n\n  const listFilesResponse = await octokit.pulls.listFiles({\n    owner: github.context.repo.owner,\n    repo: github.context.repo.repo,\n    pull_number: pullRequest.number\n  });\n\n  const changes = listFilesResponse.data.map(f => ({\n    file: f.filename,\n    changeType: parseStatus(f.status),\n    patch: f.patch!\n  }));\n\n  core.debug('found changed files:');\n  for (const change of changes) {\n    core.debug(`  ${change.file}`);\n  }\n\n  return changes;\n}\n\nfunction parseStatus(status: string): ChangeType {\n  switch (status) {\n    case 'added':\n      return ChangeType.add;\n    case 'removed':\n      return ChangeType.delete;\n    case 'modified':\n      return ChangeType.edit;\n    default:\n      return ChangeType.edit;\n  }\n}\n","/*\nCopyright 2022 Aurora Labs\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as core from '@actions/core';\nimport { HelperInputs } from '../types/generated';\nimport { context } from '@actions/github';\nimport { getChangedFiles } from '../utils/get-changed-files';\nimport { CatalogClient } from '@backstage/catalog-client';\nimport { Entity } from '@backstage/catalog-model';\n\ntype DiscoveryApi = {\n  getBaseUrl(pluginId: string): Promise<string>;\n};\n\nexport class GenerateComponentMatrix extends HelperInputs {\n  backstage_url?: string;\n}\n\nfunction sourceLocation(entity: Entity) {\n  if (!entity.metadata.annotations) return;\n  const loc = entity.metadata.annotations['backstage.io/source-location'];\n  return loc;\n}\n\nfunction sourceLocationDir(entity: Entity) {\n  const loc = sourceLocation(entity)!;\n  return loc.split('/').slice(7, -1).join('/');\n}\n\nexport const generateComponentMatrix = async ({ backstage_url }: GenerateComponentMatrix) => {\n  const eventName = process.env.GITHUB_EVENT_NAME;\n  const changedFiles = await getChangedFiles(eventName);\n\n  core.info(`Changed files: ${changedFiles}`);\n\n  const discoveryApi: DiscoveryApi = {\n    async getBaseUrl() {\n      return `${backstage_url}/api/catalog`;\n    }\n  };\n  const catalogClient = new CatalogClient({\n    discoveryApi\n  });\n\n  const entities = await catalogClient.getEntities({});\n\n  core.info(`Discovered entities: ${entities.items.length}`);\n  const repoUrl = `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}`;\n\n  // const locations = entities.items.filter(item => item.spec?.type === 'contract').map(item => sourceLocation(item));\n  // console.log(locations);\n\n  const items = entities.items\n    .filter(item => sourceLocation(item)?.startsWith(`url:${repoUrl}`))\n    .filter(item => item.spec?.type === 'contract');\n\n  // console.log(items);\n  // console.log(items.length);\n  return {\n    include: items.map(item => ({\n      name: item.metadata.name,\n      tags: item.metadata.tags,\n      path: sourceLocationDir(item)\n    }))\n  };\n};\n","/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as core from '@actions/core';\nimport * as fetch from '@adobe/node-fetch-retry';\nimport { Octokit } from '@octokit/rest';\nimport { getOctokit } from '@actions/github';\n\nconst githubToken = core.getInput('github_token', { required: true });\nexport const octokit = getOctokit(githubToken, { request: { fetch } }).rest as unknown as Octokit;\n","/*\nCopyright 2021 Expedia, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    https://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nexport class HelperInputs {\n  helper?: string;\n  github_token?: string;\n  body?: string;\n  project_name?: string;\n  project_destination_column_name?: string;\n  note?: string;\n  project_origin_column_name?: string;\n  sha?: string;\n  context?: string;\n  state?: string;\n  description?: string;\n  target_url?: string;\n  environment?: string;\n  environment_url?: string;\n  label?: string;\n  labels?: string;\n  paths?: string;\n  extensions?: string;\n  override_filter_paths?: string;\n  batches?: string;\n  pattern?: string;\n  teams?: string;\n  login?: string;\n  paths_no_filter?: string;\n  slack_webhook_url?: string;\n  number_of_assignees?: string;\n  globs?: string;\n  override_filter_globs?: string;\n  title?: string;\n  seconds?: string;\n  pull_number?: string;\n  base?: string;\n  head?: string;\n  backstage_url?: string;\n}\n"],"names":[],"sourceRoot":""}